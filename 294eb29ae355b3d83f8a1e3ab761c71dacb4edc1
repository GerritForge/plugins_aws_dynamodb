{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b30c6d2_960b56b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-22T22:56:57Z",
      "side": 1,
      "message": "Did we ever implement the removal?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 27
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4f74cdf_6b7e959a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2021-05-07T12:35:31Z",
      "side": 1,
      "message": "LGTM overall. +2 assuming we will address some comments in follow up if needed.\n\nI am going to give it a spin.",
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287d736f_0a7e8a58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2021-05-07T13:54:39Z",
      "side": 1,
      "message": "I gave it a run locally and it seem to work for me. I have created repositories, branches and changes from WIP to merge.",
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0359109d_26a7f609",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-05-10T07:37:43Z",
      "side": 1,
      "message": "Thanks all for reviewing!\nAs a PoC this is now mergeable.\nThere are some nits and comments that can be addressed as follow up changes, if the interest is enough to justify the survival of this prototype.\n\nFor now, merging ðŸ˜Š",
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d480fcf_45579881",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-22T22:56:57Z",
      "side": 1,
      "message": "Post-merge -1",
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33e50e6_3a0a7614",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/validation/dfsrefdb/dynamodb/Configuration.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2021-05-07T12:35:31Z",
      "side": 1,
      "message": "might be good \"namespacing\" those tables with Gerrit and multi-site in case they get deployed with tables for other applications...something like gerrit/refdb/\u003ctable-name\u003e ?",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 32,
        "endChar": 71
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ccc6bb_2d13375b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/validation/dfsrefdb/dynamodb/DynamoDBRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2021-05-07T12:35:31Z",
      "side": 1,
      "message": "extracting the string in a variable might make ti more readable, like:\n\n    String newOrUpdatedValue \u003d String.format(\n                    \"attribute_not_exists(%s) OR %s \u003d :old_value\",\n                    REF_DB_PRIMARY_KEY, REF_DB_VALUE_KEY)",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 127,
        "endChar": 57
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6d6ae44_422871c9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/validation/dfsrefdb/dynamodb/DynamoDBRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-22T22:56:57Z",
      "side": 1,
      "message": "It is OK to leave behind some unimplemented methods. However, because this method did not produce any errors, it was left unimplemented for years :-(",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 193,
        "endChar": 27
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce2f0d4_e252f509",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/validation/dfsrefdb/dynamodb/DynamoDBRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1019121
      },
      "writtenOn": "2021-05-07T08:28:40Z",
      "side": 1,
      "message": "yeah it will result in ClassCastException if someone requests different type... thinking out loud if sth like that would make any sense (null results in \u0027false\u0027)\n\n    if (clazz.isInstance(refValue)) {\n       return Optional.of((T)refValue);\n    }\n\n    log.error(\"write sth meaningful...\");\n\nbut I\u0027m not sure if failing fast wouldn\u0027t be better in that case (unless it gets swallowed",
      "range": {
        "startLine": 207,
        "startChar": 6,
        "endLine": 209,
        "endChar": 60
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1ed969_2efa8343",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/validation/dfsrefdb/dynamodb/DynamoDBRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-05-10T07:37:43Z",
      "side": 1,
      "message": "Yes, we could do that.\nBut I think a broader problem is that we do not use serialization of arbitrary objects at all .\nIf you look at the commit message that is indeed one of the outstanding TODO points.\nI\u0027ll create some follow up tickets for that and capture this point in there too.",
      "parentUuid": "8ce2f0d4_e252f509",
      "range": {
        "startLine": 207,
        "startChar": 6,
        "endLine": 209,
        "endChar": 60
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "639cd63e_21695c2d",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2021-05-07T12:35:31Z",
      "side": 1,
      "message": "duplicate of L28",
      "range": {
        "startLine": 32,
        "startChar": 29,
        "endLine": 32,
        "endChar": 43
      },
      "revId": "294eb29ae355b3d83f8a1e3ab761c71dacb4edc1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}